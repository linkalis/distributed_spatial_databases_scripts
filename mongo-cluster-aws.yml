version: "3.3"

# https://github.com/chefsplate/mongo-shard-docker-compose/blob/master/docker-compose.yml
# https://medium.com/@oclausen/deploying-a-mongodb-replica-set-on-aws-docker-swarm-c1c785b61aa9

services:

  ## Config server
  mongo_configsvr_a:
    image: mongo:4.0
    command: mongod --port 27019 --configsvr --replSet "configserver" --bind_ip_all
    ports:
      - "27019:27019"
    volumes:
      - mongo_configsvr_a:/data/db
    deploy:
      placement:
        constraints: [node.role == manager] # put a constraint on this so it's always deployed to manager nodes

  mongo_configsvr_b:
    image: mongo:4.0
    command: mongod --port 27019 --configsvr --replSet "configserver" --bind_ip_all
    ports:
      - "27020:27019"
    volumes:
      - mongo_configsvr_b:/data/db
    deploy:
      placement:
        constraints: [node.role == manager]

  mongo_configsvr_c:
    image: mongo:4.0
    command: mongod --port 27019 --configsvr --replSet "configserver" --bind_ip_all
    ports:
      - "27021:27019"
    volumes:
      - mongo_configsvr_c:/data/db
    deploy:
      placement:
        constraints: [node.role == manager]


  ## Shards
  mongo_shard01_a:
    image: mongo:4.0
    command: mongod --port 27018 --shardsvr --replSet "shard01" --bind_ip_all
    ports:
      - "27011:27018"
    volumes:
      - mongo_shard01_a:/data/db
    deploy:
      restart_policy:
        condition: any
        delay: 30s
        window: 60s
      placement:
        constraints: [node.role == worker]

  mongo_shard01_b:
    image: mongo:4.0
    command: mongod --port 27018 --shardsvr --replSet "shard01" --bind_ip_all
    ports:
      - "27013:27018"
    volumes:
      - mongo_shard01_b:/data/db
    deploy:
      restart_policy:
        condition: any
        delay: 30s
        window: 60s
      placement:
        constraints: [node.role == worker]

  mongo_shard01_c:
    image: mongo:4.0
    command: mongod --port 27018 --shardsvr --replSet "shard01" --bind_ip_all
    ports:
      - "27015:27018"
    volumes:
      - mongo_shard01_c:/data/db
    deploy:
      restart_policy:
        condition: any
        delay: 30s
        window: 60s
      placement:
        constraints: [node.role == worker]

  mongo_shard02_a:
    image: mongo:4.0
    command: mongod --port 27018 --shardsvr --replSet "shard02" --bind_ip_all
    ports:
      - "27012:27018"
    volumes:
      - mongo_shard02_a:/data/db
    deploy:
      restart_policy:
        condition: any
        delay: 30s
        window: 60s
      placement:
        constraints: [node.role == worker]

  mongo_shard02_b:
    image: mongo:4.0
    command: mongod --port 27018 --shardsvr --replSet "shard02" --bind_ip_all
    ports:
      - "27014:27018"
    volumes:
      - mongo_shard02_b:/data/db
    deploy:
      restart_policy:
        condition: any
        delay: 30s
        window: 60s
      placement:
        constraints: [node.role == worker]

  mongo_shard02_c:
    image: mongo:4.0
    command: mongod --port 27018 --shardsvr --replSet "shard02" --bind_ip_all
    ports:
      - "27016:27018"
    volumes:
      - mongo_shard02_c:/data/db
    deploy:
      restart_policy:
        condition: any
        delay: 30s
        window: 60s
      placement:
        constraints: [node.role == worker]


  ## Router
  mongos_router:
    image: mongo:4.0
    #command: mongos --config /etc/mongos.conf
    ports:
      - "27017:27017"
    deploy:
      placement:
        constraints: [node.role == manager]
    depends_on:
      - mongo_configsvr_a
      - mongo_configsvr_b
      - mongo_configsvr_c
      - mongo_shard01_a
      - mongo_shard01_b
      - mongo_shard01_c
      - mongo_shard02_a
      - mongo_shard02_b
      - mongo_shard02_c


volumes:
  mongo_configsvr_a:
    driver: "cloudstor:aws"
    driver_opts:
      backing: relocatable
      size: 5
      ebstype: gp2
  mongo_configsvr_b:
    driver: "cloudstor:aws"
    driver_opts:
      backing: relocatable
      size: 5
      ebstype: gp2
  mongo_configsvr_c:
    driver: "cloudstor:aws"
    driver_opts:
      backing: relocatable
      size: 5
      ebstype: gp2

  mongo_shard01_a:
    driver: "cloudstor:aws"
    driver_opts:
      backing: relocatable
      size: 30
      ebstype: gp2
  mongo_shard01_b:
    driver: "cloudstor:aws"
    driver_opts:
      backing: relocatable
      size: 30
      ebstype: gp2
  mongo_shard01_c:
    driver: "cloudstor:aws"
    driver_opts:
      backing: relocatable
      size: 30
      ebstype: gp2

  mongo_shard02_a:
    driver: "cloudstor:aws"
    driver_opts:
      backing: relocatable
      size: 30
      ebstype: gp2
  mongo_shard02_b:
    driver: "cloudstor:aws"
    driver_opts:
      backing: relocatable
      size: 30
      ebstype: gp2
  mongo_shard02_c:
    driver: "cloudstor:aws"
    driver_opts:
      backing: relocatable
      size: 30
      ebstype: gp2
